# .readthedocs.yaml
version: 2

# --- 核心配置 ---
build:
  os: ubuntu-22.04  # 指定Ubuntu 22.04以获得稳定的环境
  tools:
    python: "3.10"  # 固定Python版本

  # --- 系统依赖 ---
  apt_packages:
    - cmake
    - gfortran
    - build-essential
    - zlib1g-dev
    - libgsl-dev  # GSL数学库

  # --- 构建环境修复 ---
  jobs:
    pre_install:
      # 1. 解决浅克隆问题（确保setuptools_scm能获取版本）
      - git fetch --unshallow
      - git config --global safe.directory '*'
      
      # 2. 显式创建_version.py所需目录
      - mkdir -p src/python/pyxccd
      - touch src/python/pyxccd/_version.py

  # --- 构建命令 ---
  commands:
    # 1. 升级基础工具
    - pip install --upgrade pip setuptools wheel
    
    # 2. 安装构建后端（优先尝试scikit-build）
    - pip install scikit-build>=0.16.0 || echo "警告：scikit-build安装失败，回退到setuptools"
    
    # 3. 安装项目（禁用隔离模式以避免路径问题）
    - pip install -e . --no-build-isolation --verbose
    
    # 4. 安装文档专用依赖
    - pip install -r requirements/docs.txt

# --- Sphinx文档配置 ---
sphinx:
  configuration: docs/source/conf.py  # 文档配置文件路径
  fail_on_warning: false  # 允许文档构建时有警告但不中断

# --- 输出格式 ---
formats:
  - html  # 默认生成HTML
  - pdf   # 可选生成PDF（如需）

# --- Python包安装配置 ---
python:
  install:
    - requirements: requirements/docs.txt  # 仅安装文档工具
    # 注意：移除了 `method: pip` 和 `path: .` 避免重复安装

# --- 高级配置 ---
# 1. 缓存加速后续构建
# build:
#   cache:
#     pip: true
#     apt: true

# 2. 环境变量（如需禁用C++扩展）
# environment:
#   DISABLE_C_EXTENSIONS: "1" 

# 3. 自定义构建镜像（如需特定工具链）
# build:
#   image: readthedocs/build:latest